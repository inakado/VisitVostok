name: Deploy to VPS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run type check
      run: npm run build
      env:
        DATABASE_URL: "postgresql://user:password@localhost:5432/test_db"
        SKIP_ENV_VALIDATION: "true"
    
    - name: Run tests (if any)
      run: npm test --if-present

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          cd /var/www/visitvostok
          
          # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–æ—Å–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥
          git fetch origin main
          git reset --hard origin/main
          git clean -fd
          
          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ package.json –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–π –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏
          PACKAGE_CHANGED=$(git diff HEAD~1 HEAD --name-only | grep -E "(package\.json|package-lock\.json)" || echo "")
          
          if [ ! -z "$PACKAGE_CHANGED" ] || [ ! -d "node_modules" ]; then
            echo "üîÑ Package dependencies changed or node_modules missing - reinstalling..."
            rm -rf node_modules
            npm install
          else
            echo "üì¶ Dependencies unchanged - skipping reinstall"
          fi
          
          # Prisma –æ–ø–µ—Ä–∞—Ü–∏–∏
          npx prisma generate
          npx prisma migrate deploy
          
          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω—É–∂–µ–Ω –ª–∏ –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Å—Ç–∞)
          echo "üìä –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
          DB_STATS=$(npm run check-db-stats --silent)
          echo "$DB_STATS"
          
          # –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞
          eval "$DB_STATS"
          
          echo "üìä –í—Å–µ–≥–æ –º–µ—Å—Ç –≤ –±–∞–∑–µ: $TOTAL_PLACES"
          echo "üìä –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –º–µ—Å—Ç –≤ –±–∞–∑–µ: $UNIQUE_PLACES"
          echo "üìä –î—É–±–ª–∏–∫–∞—Ç—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã: $HAS_DUPLICATES"
          
          # –ï—Å–ª–∏ –±–∞–∑–∞ –ø—É—Å—Ç–∞—è –∏–ª–∏ –º–∞–ª–æ –º–µ—Å—Ç - –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º
          if [ "$UNIQUE_PLACES" -eq "0" ] || [ "$UNIQUE_PLACES" -lt "1000" ]; then
            echo "üì• Importing transformed places data..."
            npm run import-transformed-places || echo "Import failed, continuing..."
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞
            echo "üìä –û–±–Ω–æ–≤–ª—è—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞..."
            DB_STATS=$(npm run check-db-stats --silent)
            eval "$DB_STATS"
            echo "üìä –ü–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞: $TOTAL_PLACES –∑–∞–ø–∏—Å–µ–π, $UNIQUE_PLACES —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö"
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ –æ—á–∏—â–∞–µ–º –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
          echo "üßπ Checking for duplicates..."
          if [ "$HAS_DUPLICATES" = "true" ]; then
            echo "üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã ($TOTAL_PLACES –∑–∞–ø–∏—Å–µ–π vs $UNIQUE_PLACES —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö). –û—á–∏—â–∞—é..."
            npm run clean-duplicates
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—á–∏—Å—Ç–∫–∏
            echo "üìä –ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—á–∏—Å—Ç–∫–∏..."
            DB_STATS=$(npm run check-db-stats --silent)
            eval "$DB_STATS"
            echo "üìä –ü–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: $TOTAL_PLACES –∑–∞–ø–∏—Å–µ–π, $UNIQUE_PLACES —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö"
          else
            echo "‚úÖ Database clean ($TOTAL_PLACES records, $UNIQUE_PLACES unique places)"
          fi
          
          # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –¥–µ–ø–ª–æ–µ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
          echo "üî® Building application (forced rebuild)..."
          rm -rf .next
          npm run build
          
          # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          pm2 restart visitvostok || pm2 start npm --name "visitvostok" -- start
          pm2 save
        command_timeout: 15m 