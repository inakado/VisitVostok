"use client";

import { useState, useCallback, useEffect, useMemo } from "react";
import { Place } from '@/types';
import MapLibreMap from "@/components/MapLibreMap";
import MapFilter from "@/components/MapFilter";
import PlacesList from "@/components/PlacesList";
import BottomTabs from "@/components/BottomTabs";
import BottomSheet from "@/components/BottomSheet";
import { useHomePageData } from "@/lib/hooks";
import { useMapFilters } from "@/lib/hooks/useMapFilters";

export default function ClientHomePage() {
  const [view, setView] = useState<"map" | "list">("map");
  const [selectedPlace, setSelectedPlace] = useState<Place | null>(null);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Å—Ç–∞–≤–Ω–æ–π —Ö—É–∫ –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ fetch
  const { places, isLoading, error, refetch } = useHomePageData();

  // –•—É–∫ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  const {
    filters,
    setFilters,
    categories,
    filteredPlaces,
    totalFilteredPlaces,
    toggleCategoryExpansion,
  } = useMapFilters(places);

  // –ú–µ–º–æ–∏–∑–∏—Ä—É–µ–º filteredPlaces –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–µ—Ä—Ü–∞–Ω–∏—è
  const stablePlaces = useMemo(() => {
    // –ü—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º filteredPlaces –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏
    return filteredPlaces;
  }, [filteredPlaces]);

  // –õ–æ–≥–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  useEffect(() => {
    console.log('üè† ClientHomePage - –∏–∑–º–µ–Ω–∏–ª–∏—Å—å —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Å—Ç–∞:', {
      –≤—Å–µ–≥–æ: places.length,
      –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: stablePlaces.length,
      —Ñ–∏–ª—å—Ç—Ä—ã: {
        –ø–æ–∏—Å–∫: filters.searchQuery,
        –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: filters.selectedCategories.length,
        –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏: filters.selectedSubcategories.length
      }
    });
  }, [stablePlaces.length, places.length, filters]);

  const handlePlaceSelect = useCallback((place: Place | null) => {
    setSelectedPlace(place);
  }, []);

  const handleCloseBottomSheet = useCallback(() => {
    setSelectedPlace(null);
  }, []);

  // –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const structuredData = {
    "@context": "https://schema.org",
    "@type": "TouristDestination",
    name: "–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π –∫—Ä–∞–π - –î–∞–ª—å–Ω–∏–π –í–æ—Å—Ç–æ–∫ –†–æ—Å—Å–∏–∏",
    description: "–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ä–µ–≥–∏–æ–Ω –†–æ—Å—Å–∏–∏ —Å –±–æ–≥–∞—Ç–æ–π –ø—Ä–∏—Ä–æ–¥–æ–π, –∏—Å—Ç–æ—Ä–∏–µ–π –∏ –∫—É–ª—å—Ç—É—Ä–æ–π",
    geo: {
      "@type": "GeoCoordinates",
      latitude: 43.1056,
      longitude: 131.8735
    },
    includesAttraction: places.slice(0, 10).map(place => ({
      "@type": "TouristAttraction",
      name: place.title,
      description: place.categoryName,
      geo: {
        "@type": "GeoCoordinates", 
        latitude: place.lat,
        longitude: place.lng
      }
    }))
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–≤—Ç–æ—Ä–∞
  if (error) {
    return (
      <main className="min-h-screen flex flex-col bg-[#f0f2f8]">
        <div className="flex-1 flex items-center justify-center">
          <div className="text-center p-8">
            <h2 className="text-2xl font-bold text-[#2C3347] mb-4">–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</h2>
            <p className="text-gray-600 mb-6">{error}</p>
            <button 
              onClick={refetch}
              className="bg-[#5783FF] text-white px-6 py-3 rounded-lg hover:bg-[#4a71e8] transition-colors"
            >
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        </div>
      </main>
    );
  }

  return (
    <>
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}
      />
      <main className="min-h-screen flex flex-col bg-[#f0f2f8]">
        <h1 className="sr-only">–ö—É–¥–∞ –ø–æ–µ—Ö–∞—Ç—å? –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –º–µ—Å—Ç–∞ –î–∞–ª—å–Ω–µ–≥–æ –í–æ—Å—Ç–æ–∫–∞ –†–æ—Å—Å–∏–∏</h1>
        <BottomTabs view={view} setView={setView} />
        <div className="flex-1 relative">
          {isLoading ? (
            <div className="text-center text-gray-500 mt-12">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
          ) : view === "map" ? (
            <>
              {/* –ö–∞—Ä—Ç–∞ */}
              <MapLibreMap places={stablePlaces} onPlaceSelect={handlePlaceSelect} />
              
              {/* –§–∏–ª—å—Ç—Ä */}
              <div className="absolute top-20 left-4 z-10 hidden lg:block">
                <MapFilter
                  filters={filters}
                  onFiltersChange={setFilters}
                  categories={categories}
                  totalPlaces={totalFilteredPlaces}
                  onToggleCategoryExpansion={toggleCategoryExpansion}
                />
              </div>
              
              {/* –ú–æ–±–∏–ª—å–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä */}
              <div className="absolute top-20 left-4 z-10 lg:hidden">
                <MapFilter
                  filters={filters}
                  onFiltersChange={setFilters}
                  categories={categories}
                  totalPlaces={totalFilteredPlaces}
                  onToggleCategoryExpansion={toggleCategoryExpansion}
                />
              </div>
            </>
          ) : (
            <PlacesList />
          )}
        </div>
        <BottomSheet place={selectedPlace} onClose={handleCloseBottomSheet} />
      </main>
    </>
  );
} 